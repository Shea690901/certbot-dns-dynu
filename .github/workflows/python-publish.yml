# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  pull_request:
    types: [opened, edited, reopened]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.11"
        env:
          AGENT_TOOLSDIRECTORY: '/opt/app/actions-runner/_work/_tool'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r .devcontainer/build-requirements.txt -r requirements.txt

      - name: Lint with pylint
        run: |
          python -m pip install -r src/tests/requirements.txt
          python -m pylint src

      - name: Test with pytest
        run: |
          python -m pip install -r src/tests/requirements.txt
          python -m pytest -s src --cov-config=.coveragerc --cov=src \
            --cov-report=xml:unit-test-reports/coverage.xml --cov-report html:unit-test-reports/html \
            --cov-report term


      - name: Build dev release distributions
        run: |
          # NOTE: put your own distribution build steps here.
          export timestamp=`date +%y%m%d%s`

          python -m build --wheel --config-setting=--global-option=egg_info \
          --config-setting=--global-option=-b"dev${timestamp}"
        if: github.event_name == 'pull_request'

      - name: Build release distributions
        run: |
          # NOTE: put your own distribution build steps here.
          export timestamp=`date +%y%m%d%s`

          python -m pip install -r requirements.txt
          python -m build --wheel --config-setting=--global-option=egg_info \
          --config-setting=--global-option=-b"post${timestamp}"
        if: github.event_name == 'release'

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: |
            dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      url: https://pypi.org/project/certbot-dns-dynu/
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist/
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
